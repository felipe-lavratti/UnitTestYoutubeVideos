#!python
Import ("default_env")
from PlatformBaseClass import PlatformBaseClass

lpc17xx_toolchain_prefix = 'arm-none-eabi-'

class Lpc1769Platform(PlatformBaseClass):
    def Name(self):
        return 'lpc1769'

    def TargetNameList(self):
        return [
                self.Default(str(self._build_binaries['lpc1769_app'])),
                self.Default(str(self._build_binaries['lpc1769_tests'])),
            ]

    def BuildList(self):
        return [
            'lpc1769_board',
            'app',
            'lpc1769_app',
            'cpputest',
            'app_tests',
            'lpc1769_tests'
        ]

    def ProfileEnabled(self):
        return False

    def CppUTestExtensionsEnabled (self):
        return False

    def PostBuildTargets(self):
        #
        #
        # Tests Build
        # Use `scons tests` during deveopment, to print tests results and force
        # build of everything.
        # Command( target = "lpc1769_app",
        #         source = self._build_binaries['lpc1769_app'],
        #         action = lpc17xx_toolchain_prefix + "-size $SOURCE" )
        #
        # Command( target = "lpc1769_test",
        #         source = self._build_binaries['lpc1769_test'],
        #         action = lpc17xx_toolchain_prefix + "-size $SOURCE" )
        pass

    def _SetupEnv(self):
        self._env = default_env.Clone (
            CC     = lpc17xx_toolchain_prefix + 'gcc',
            CXX    = lpc17xx_toolchain_prefix + "g++",
            LD     = lpc17xx_toolchain_prefix + "g++",
            AR     = lpc17xx_toolchain_prefix + "ar",
            STRIP  = lpc17xx_toolchain_prefix + "strip",
            RANLIB = lpc17xx_toolchain_prefix + "ranlib",
            CPPDEFINES = [
                          '__CODE_RED',
                          '__NEWLIB__',
                          '__LPC17XX__',
                          'CORE_M3',
                          ('__USE_CMSIS', 'CMSISv2p00_LPC17xx'),
                          'CPP_USE_HEAP',
                          ],
            CFLAGS = ['-std=gnu11'],
            CXXFLAGS = ['-Wall', '-fno-rtti', '-fno-exceptions', '-std=gnu++14'],
            CCFLAGS = ['-O0', '-g3', '-Wall', '-fmessage-length=0',
                       '-fno-builtin', '-ffunction-sections', '-fdata-sections',
                       '-mcpu=cortex-m3', '-mthumb'],
            CPPINCLUDES = [],
            LINKFLAGS = [
                         '-nostdlib',
                         '-Xlinker',
                         '--gc-sections',
                         '-Xlinker',
                         '-print-memory-usage',
                         '-mcpu=cortex-m3',
                         '-mthumb'
                         ]
        )

        lpc17xx_toolchain_path = '/usr/local/lpcxpresso_8.2.2_650/lpcxpresso/tools/bin'
        self._env.PrependENVPath('PATH', lpc17xx_toolchain_path)

instance = Lpc1769Platform()
Return('instance')
